# Generated by Django 3.0.5 on 2020-04-15 09:30

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='Anonymous', max_length=30)),
                ('email', models.EmailField(blank=True, default='ppcfp@yopmail.com', max_length=254)),
                ('a1', models.PositiveIntegerField(default=10000, verbose_name='S1-Transportation : Q1 - How far have you flown by plane in the last 12 months? (km)')),
                ('a2', models.PositiveIntegerField(default=100, verbose_name='S1-Transportation : Q2 - How far have you taken trains in the last 12 months? (km)')),
                ('a3', models.PositiveIntegerField(default=1000, verbose_name='S1-Transportation : Q3 - How far have you taken buses in the last 12 months? (km)')),
                ('a4', models.PositiveIntegerField(default=5000, verbose_name='S1-Transportation : Q4 - How far have you taken cars in the last 12 months? (km)')),
                ('a5', models.PositiveIntegerField(default=5000, verbose_name='S1-Transportation : Q5 - How far have you taken motos in the last 12 months? (km)')),
                ('b1', models.PositiveSmallIntegerField(default=120, verbose_name='S2-Clothing : Q1 - How many small items (socks, undies) have you purchased in the last 12 months?')),
                ('b2', models.PositiveSmallIntegerField(default=48, verbose_name='S2-Clothing : Q2 - How many medium size items (t-shirts, dresses) have you purchased in the last 12 months?')),
                ('b3', models.PositiveSmallIntegerField(default=6, verbose_name='S2-Clothing : Q3 - How many large items (jeans, coats)?')),
                ('c1', models.PositiveSmallIntegerField(default=6, verbose_name='S3-Electronics : Q1 - How many very small appliance (earphones, computer mouse..) have you purchased in the last 12 months?')),
                ('c2', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='S3-Electronics : Q2 - How many users do they have?')),
                ('c3', models.PositiveSmallIntegerField(default=0, verbose_name='S3-Electronics : Q3 - How many small household appliance (kettle, toaster, iron, speakers...) have you purchased in the last 12 months?')),
                ('c4', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='S3-Electronics : Q4 - How many users do they have?')),
                ('c5', models.PositiveSmallIntegerField(default=20, verbose_name='S3-Electronics : Q5 - How many medium-sized appliances (laptop, monitor, small fridge, desktop computer) have you purchased in the last 12 months?')),
                ('c6', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='S3-Electronics : Q6 - How many users do they have?')),
                ('c7', models.PositiveSmallIntegerField(default=10, verbose_name='S3-Electronics : Q7 - Large appliances (washing machine, large fridge..)')),
                ('c8', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='S3-Electronics : Q8 - How many users do they have?')),
                ('d1', models.PositiveSmallIntegerField(default=2, verbose_name='S4-Food : Q1 - How many grams of beef do you eat per week?')),
                ('d2', models.PositiveSmallIntegerField(default=2, verbose_name='S4-Food : Q2 - How many grams of pork do you eat per week?')),
                ('d3', models.PositiveSmallIntegerField(default=2, verbose_name='S4-Food : Q3 - How many grams of chicken do you eat per week?')),
                ('d4', models.PositiveSmallIntegerField(default=2, verbose_name='S4-Food : Q4 - How many grams of fish do you eat per week?')),
                ('d5', models.PositiveSmallIntegerField(default=1, verbose_name='S4-Food : Q5 - How many grams of cheese do you eat per week?')),
                ('d6', models.PositiveSmallIntegerField(default=1, verbose_name='S4-Food : Q6 - How many grams of milk, yogurt, ice-cream, do you eat per week?')),
                ('d7', models.PositiveSmallIntegerField(default=21, verbose_name='S4-Food : Q7 - How many eggs do you eat per week?')),
                ('d8', models.PositiveSmallIntegerField(default=3, verbose_name='S4-Food : Q8 - How many grams of grains, vegetables, and fruit do you eat per week?')),
                ('d9', models.PositiveSmallIntegerField(choices=[(0, 'None'), (25, 'Some'), (50, 'Half'), (75, 'Mostly'), (100, 'All')], default=75, verbose_name='S4-Food : Q9 - How much of your food comes from within 500 km (e.g. unprocessed or minimally processed food from wet market)?')),
                ('da', models.PositiveSmallIntegerField(choices=[(0, 'None'), (25, 'Some'), (50, 'Half'), (75, 'Mostly'), (100, 'All')], default=25, verbose_name='S4-Food : Q10 - How much of your food comes from 500-5000 km away (e.g. processed food from Thailand or China)?')),
                ('db', models.PositiveSmallIntegerField(choices=[(0, 'None'), (25, 'Some'), (50, 'Half'), (75, 'Mostly'), (100, 'All')], default=0, verbose_name='S4-Food : Q11 - How much of your food comes from more than 5000 km away (imported from Europe, Australia, US..)')),
                ('e1', models.PositiveSmallIntegerField(choices=[(0, 'None'), (25, 'Some'), (50, 'Half'), (75, 'Mostly'), (100, 'All')], default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='S5-Electricity : Q1 - How much of your electricity needs are covered by your solar panels?')),
                ('e2', models.FloatField(default=50, verbose_name='S5-Electricity : Q2 - How much is your monthly electricity bill? (USD)')),
                ('e3', models.PositiveSmallIntegerField(default=1, verbose_name='S5-Electricity : Q3 - How many people do you share your living space and your electricity bill with (family or roommates living in the same space)?')),
                ('e4', models.PositiveSmallIntegerField(default=8, validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(0)], verbose_name='S5-Electricity : Q4 - How many hours per day do you spend in air-conditioning outside of your home (e.g. office, coffee shop)')),
                ('e5', models.PositiveSmallIntegerField(default=1, verbose_name='S5-Electricity : Q5 - Roughly how many people share this in total (including yourself. E.g. crowded coffee shop with 20 people, or small office with 4 people)?')),
                ('f1', models.PositiveSmallIntegerField(default=5, verbose_name='S6-House : Q1 - How old is your house? (in years)')),
                ('f2', models.PositiveSmallIntegerField(default=20, verbose_name='S6-House : Q2 - How long do you think the house will be around? (in years)')),
                ('f3', models.PositiveSmallIntegerField(default=50, verbose_name='S6-House : Q3 - How big is your house, in square meters?')),
                ('f4', models.PositiveSmallIntegerField(choices=[(100, 'Bricks and concrete'), (10, 'Wood')], default=100, verbose_name='S6-House : Q4 - What is your house primarily made of?')),
                ('f5', models.PositiveSmallIntegerField(default=4, verbose_name='S6-House : Q5 - How many people live in the house on average per year?')),
            ],
        ),
    ]
